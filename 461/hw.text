From binkley@csmaster.loyola.edu Mon Feb 17 14:36:29 1997
Return-Path: <binkley@csmaster.loyola.edu>
Received: from lbf by csmaster.loyola.edu (SMI-8.6/SMI-SVR4)
	id OAA02091; Mon, 17 Feb 1997 14:36:29 -0500
Received: by lbf (SMI-8.6/SMI-SVR4)
	id OAA02147; Mon, 17 Feb 1997 14:36:28 -0500
From: binkley@csmaster.loyola.edu (Dave Binkley)
Message-Id: <199702171936.OAA02147@lbf>
Subject: hw.text
To: binkley@csmaster (Dave Binkley), mbrannig@csmaster (Matthew A. Brannigan),
        aclark@csmaster (J. Alexander Clark), bduncan@csmaster (Brucie Duncan),
        rhaber@csmaster, gfurr@csmaster (Gwennie Furr)
Date: Mon, 17 Feb 1997 14:36:28 -0500 (EST)
X-Mailer: ELM [version 2.4 PL25]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Content-Length: 2320
Status: OR




EExxaammppllee

Grammar

     (1) @E -> E + T@          (6) @T -> F@
     (3) @E ->T@               (7) @F -> (E)@
     (4) @E -> T * F@          (8) @F -> i@


Trace for @id + id * id + id@

Table(construction later)

     +------++---------------------------------++--------------+
     |      ||           Terminals             ||Nonterminals  |
     |      ||         (action part)           ||(go-to part)  |
     |State ||id   +    *    (    )     $      || E     T    F |
     +------++---------------------------------++--------------+
     +------++---------------------------------++--------------+
     |0     ||s5             s4                || 1     2    3 |
     |1     ||     s6                   accept ||              |
     |2     ||     r3   s8        r3    r3     ||              |
     |3     ||     r6   r6        r6    r6     ||              |
     |4     ||s5             s4                ||10     2    3 |
     |5     ||     r8   r8        r8    r8     ||              |
     |6     ||s5             s4                ||      11    3 |
     |8     ||s5             s4                ||           13 |
     |10    ||     s6             s15          ||              |
     |11    ||     r1   s8        r1    r1     ||              |
     |13    ||     r4   r4        r4    r4     ||              |
     |15    ||     r7   r7        r7    r7     ||              |
     +------++---------------------------------++--------------+

Algorithm:

  1)
    Place  '$' at the end of the input string and push state
    0 (the start state) on the the stack.

  2)  Repeat
      let @q sub m@ be the current state (top of the stack).
      let @a sub i@ be the incoming token.
      Case Table [@q sub m , a sub i@] of
          Shift  @q sub n@: shift (push) @a sub i@ then push @q sub n@.  [_i_._e_., enter state @q sub n@.]
          Reduce n: [Reduce by production n:@A -> alpha  sub 1 ... alpha sub k@]
                1.   Pop  @k@  state-symbol  pairs  off  the stack. [This is the handle.]
                2.  Let @q sub j@ be the state on the top of the updated stack.
                3.   Push  A then enter (push) go-to-part[@q sub j , A@].

          Accept: Ahh Accept?  Were done!
          Error (blank entry): report syntax error :(


Homework: trace for some other inputs


